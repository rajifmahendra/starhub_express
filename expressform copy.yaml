env:
  contexts:
    - name: Default Context
      includePaths:
        - http://54.179.2.8:4002.*
      excludePaths:
        - http://54.179.2.8:4002/swagger.*
        - http://54.179.2.8:4002/api-docs.*
      urls:
        - http://54.179.2.8:4002
      technology:
        include:
          - NodeJs
          - Express
        exclude: []
      authentication:
        method: json
        parameters:
          loginPageUrl: http://54.179.2.8:4002
          loginRequestUrl: http://54.179.2.8:4002/api/auth/login
          loginRequestBody: '{ "email": "%username%", "password": "%password%" }'
          loginRequestHeaders: 'Content-Type: application/json'
        verification:
          method: poll
          pollUrl: http://54.179.2.8:4002/api/order
          pollFrequency: 60
          pollUnits: requests
          loggedInRegex: '"message"\s*:\s*"Berhasil mengambil data orders"'
          loggedOutRegex: '"message"\s*:\s*"Token tidak valid"'
      sessionManagement:
        method: cookieBased
        parameters:
          headerName: Authorization
          headerPrefix: Bearer
      users:
        - name: authentication user
          credentials:
            username: rajif@gmail.com
            password: mypassword

  vars: {}
  parameters:
    failOnError: true
    failOnWarning: false
    progressToStdout: true

jobs:
  - name: passiveScan-config
    type: passiveScan-config
    parameters:
      scanOnlyInScope: true
      enableTags: false
    rules: []
  
  - name: spider
    type: spider
    parameters:
      context: Default Context
      user: authentication user
      maxDuration: 10
      maxDepth: 5
      acceptCookies: true
      parseComments: true
      parseRobotsTxt: true
      parseSitemapXml: true
      parseSVNEntries: true
      parseGit: true
      handleODataParametersVisited: true
  
  - name: openapi
    type: openapi
    parameters:
      apiFile: http://54.179.2.8:4002/swagger.json
      context: Default Context
      targetUrl: http://54.179.2.8:4002
  
  - name: passiveScan-wait
    type: passiveScan-wait
    parameters: {}
  
  - name: activeScan
    type: activeScan
    parameters:
      context: Default Context
      user: authentication user
      threadPerHost: 4
      delayInMs: 1000
      maxRuleDurationInMins: 5
      maxScanDurationInMins: 30
    policyDefinition:
      rules:
        - id: 40018
          name: SQL Injection
          threshold: medium
        - id: 40019
          name: SQL Injection - MySQL
          threshold: medium
        - id: 40020
          name: SQL Injection - Hypersonic SQL
          threshold: medium
        - id: 40021
          name: SQL Injection - Oracle
          threshold: medium
        - id: 40022
          name: SQL Injection - PostgreSQL
          threshold: medium
        - id: 90019
          name: Code Injection
          threshold: medium
        - id: 90020
          name: Command Injection
          threshold: medium
        - id: 40012
          name: Cross Site Scripting (Reflected)
          threshold: medium
        - id: 40014
          name: Cross Site Scripting (Persistent)
          threshold: medium
        - id: 40016
          name: Cross Site Scripting (Persistent) - Prime
          threshold: medium
        - id: 40017
          name: Cross Site Scripting (Persistent) - Spider
          threshold: medium
  
  - name: report
    type: report
    parameters:
      template: traditional-html
      reportDir: /output
      reportFile: dast-report
      reportTitle: DAST Security Report - StarHub Express
      reportDescription: Dynamic Application Security Testing untuk aplikasi StarHub Express API
      threadPerHost: 4
    policyDefinition:
      rules: []
