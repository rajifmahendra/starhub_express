pipeline {
    agent any

    environment {
        CHECKMARX_BASE_URL = 'https://anz.ast.checkmarx.net'
        ENV_ID = 'ae3de5d2-b0d7-4394-9941-988a174df169'
        REPO_NAME = 'starhub_express'
    }

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'master', description: 'Branch to build')
    }

    stages {
        stage("Checkout Code") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'token-github-project-rajif', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
                        if (fileExists("${env.REPO_NAME}/.git")) {
                            echo "Repo already exists. Pulling latest changes..."
                            dir("${env.REPO_NAME}") {
                                sh """
                                    git reset --hard
                                    git clean -fd
                                    git checkout ${params.BRANCH_NAME}
                                    git pull https://${GIT_USER}:${GIT_TOKEN}@github.com/rajifmahendra/${env.REPO_NAME}.git ${params.BRANCH_NAME}
                                """
                            }
                        } else {
                            echo "Cloning repository..."
                            sh """
                                git clone -b ${params.BRANCH_NAME} https://${GIT_USER}:${GIT_TOKEN}@github.com/rajifmahendra/${env.REPO_NAME}.git
                            """
                        }
                    }
                }
            }
        }

        stage("Run DAST Checkmarx") {
            steps {
                withCredentials([string(credentialsId: 'cx-apikey', variable: 'CX_APIKEY')]) {
                    sh '''
                      set -e
                      mkdir -p output
        
                      test -f "starhub_express/expressform.yaml"
        
                      docker run --user 0 \
                        -v "$(pwd)/output:/output" \
                        -v "$(pwd)/starhub_express:/config" \
                        -e CX_APIKEY=$CX_APIKEY \
                        checkmarx/dast:latest \
                          web --base-url=$CHECKMARX_BASE_URL \
                          --timeout=10000 --log-level=debug --verbose \
                          --environment-id=$ENV_ID --fail-on high \
                          --config=/config/expressform.yaml \
                          --output /output
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "✅ DAST pipeline completed."
        }
        failure {
            echo "❌ DAST pipeline failed. Check container logs or config."
        }
    }
}
